{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}
{% import 'macros/list.jinja2' as list %}

{% block title %}Distrito {{ distrito.clave }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Distrito ' + distrito.clave) %}
        {{ topbar.button_previous('Distritos', url_for('distritos.list_active')) }}
        {% if current_user.can_edit('DISTRITOS') %}
            {{ topbar.button_edit('Editar', url_for('distritos.edit', distrito_id=distrito.id)) }}
        {% endif %}
        {% if current_user.can_admin('DISTRITOS') %}
            {% if distrito.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('distritos.delete', distrito_id=distrito.id)) }}{% endif %}
            {% if distrito.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('distritos.recover', distrito_id=distrito.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=distrito.estatus) %}
        {{ detail.label_value_big('Clave', distrito.clave) }}
        {{ detail.label_value('Nombre', distrito.nombre) }}
    {% endcall %}
    <!-- card Centros de Trabajo -->
    {% call detail.card('Centros de Trabajos') %}
    {% endcall %}
    <!-- card Personas -->
    {% call detail.card('Personas') %}
    <p>TODO: FALTA: filtrar personas en este distrito</p>
    <!-- Filtros Personas -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosPersonas.buscar(); return false;">
                    <div class="col-6">
                        <div class="form-floating">
                            <input id="filtroNombreCompleto" type="text" class="form-control" aria-label="Nombre completo" style="text-transform: uppercase;">
                            <label for="filtroNombreCompleto">Nombre completo</label>
                        </div>
                    </div>
                    <div class="col-6 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosPersonas.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosPersonas.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- DataTable Personas -->
        <table id="personas_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Nombre completo</th>
                    <th>Sexo</th>
                    <th>Situación</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_admin('DISTRITOS') %}
        {% if distrito.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + distrito.clave + '?') }}{% endif %}
        {% if distrito.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + distrito.clave + '?') }}{% endif %}
    {% endif %}
    {{ detail.moment_js(moment) }}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        // DataTable Personas
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
        let configDataTable = constructorDataTable.config();
        configDataTable['ajax']['url'] = '/personas/datatable_json';
        configDataTable['ajax']['data'] = {{ filtros_personas }};
        configDataTable['columns'] = [
            { data: 'detalle' },
            { data: 'sexo' },
            { data: 'situacion' }
        ];
        configDataTable['columnDefs'] = [
            {
                targets: 0, // detalle
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.url + '">' + data.nombre_completo + '</a>';
                }
            }
        ];
        // Filtros Personas
        const filtrosPersonas = new FiltrosDataTable('#personas_datatable', configDataTable);
        filtrosPersonas.agregarInput('filtroNombreCompleto', 'nombre_completo');
        filtrosPersonas.precargar();
    </script>
{% endblock %}
