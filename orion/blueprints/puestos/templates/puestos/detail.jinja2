{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}
{% import 'macros/list.jinja2' as list %}

{% block title %}Puesto {{ puesto.clave }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Puesto ' + puesto.clave) %}
        {{ topbar.button_previous('Puestos', url_for('puestos.list_active')) }}
        {% if current_user.can_edit('PUESTOS') %}
            {{ topbar.button_edit('Editar', url_for('puestos.edit', puesto_id=puesto.id)) }}
        {% endif %}
        {% if current_user.can_admin('PUESTOS') %}
            {% if puesto.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('puestos.delete', puesto_id=puesto.id)) }}{% endif %}
            {% if puesto.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('puestos.recover', puesto_id=puesto.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=puesto.estatus) %}
        {{ detail.label_value_big('Clave', puesto.clave) }}
        {{ detail.label_value('Nombre', puesto.nombre) }}
        {{ detail.label_value('Tipo de Cargo', puesto.CARGOS[puesto.tipo_cargo]) }}
        {{ detail.label_value('Tipo de Empleado', puesto.TIPOS_EMPLEADOS[puesto.tipo_empleado]) }}
    {% endcall %}
    {% if current_user.can_view('PUESTOS FUNCIONES') %}
    <!-- Mostrar un Datatable de puesto funciones -->
    {% call detail.card('Funciones') %}
    <!-- Filtros puestos_funciones -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosPuestos.buscar(); return false;">
                    <div class="col-6">
                        <div class="form-floating">
                            <input id="filtroNombre" type="text" class="form-control" aria-label="Nombre" style="text-transform: uppercase;">
                            <label for="filtroNombre">Nombre</label>
                        </div>
                    </div>
                    <div class="col-6 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosPuestos.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosPuestos.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- DataTable puestos -->
        <table id="puestos_funciones_datatable" class="table display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Nombre</th>
                </tr>
            </thead>
        </table>
        <a class="btn btn-primary" href="{{url_for('puestos_funciones.new_with_puesto', puesto_id=puesto.id)}}">Agregar</a>
    {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_admin('PUESTOS') %}
        {% if puesto.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + puesto.clave + '?') }}{% endif %}
        {% if puesto.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + puesto.clave + '?') }}{% endif %}
    {% endif %}
    {{ detail.moment_js(moment) }}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    {% if current_user.can_view('PUESTOS FUNCIONES') %}
        <script>
            // DataTable puestos
            const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
            let configDataTable = constructorDataTable.config();
            configDataTable['ajax']['url'] = '/puestos_funciones/datatable_json';
            configDataTable['ajax']['data'] = {{ filtros_puestos_funciones }};
            configDataTable['columns'] = [
                { data: 'detalle' }
            ];
            configDataTable['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.nombre + '</a>';
                    }
                }
            ];
            // Filtros puestos
            const filtrosPuestos = new FiltrosDataTable('#puestos_funciones_datatable', configDataTable);
            filtrosPuestos.agregarInput('filtroNombre', 'nombre');
            filtrosPuestos.precargar();
        </script>
    {% endif %}
{% endblock %}
